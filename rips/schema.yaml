#=========================================
#WARL defination types example
# bitmask:
#             type: dict
#             excludes: [distinct, range]
#             required: True
#             schema:
#                 base:
#                     type: integer
#                     allowed: [0, 1, 2, 3]
#                 mask:
#                     type: integer
#                     allowed: [0, 1, 2, 3]
#         distinct:
#             type: dict
#             excludes: [bitmask, range]
#             required: True
#             schema:
#                 values:
#                     type: list
#                     schema:
#                         type: integer
#                         allowed: [0, 1, 2, 3]
#                 mode:
#                     type: string
#                     allowed: ['unchanged', 'saturate_s', 'saturate_l','next_l', 'next_s']
#         range:
#             type: dict
#             excludes: [bitmask, distinct]
#             required: True
#             schema:
#                 base:
#                     type: integer
#                     allowed: [0, 1, 2, 3]
#                 bound: 
#                     type: integer
#                     allowed: [0, 1, 2, 3]
#                 mode:
#                     type: string
#                     allowed: ['saturate', 'unchanged']

###
# The readonly field specifies that the fields corresponding to that particular field(register) is implemented as read only.
# The implemented field specifies that the corresponding optional feature is implemented in the DUT.
# Information for WARL fields
#     These fields can be implemented as one of the following three types.
#     1.distinct-
#         A set of distinct values which are considered as legal and any other value is considered as illegal.
#         The update mode on illegal value write for this type are as follows-
#             UnChgd,NextUp,NextDown,NearUp,NearDown,Largest,Smallest
#     2.range-
#         The values >= base(Lower) and <= bound(Upper) are considered legal and anything else as illegal.
#         The update mode on illegal value write for this type are as follows-
#             Saturate,UnChgd,Addr
#     3.bitmask-
#         For the bits which are Read only, the corresponding bits are cleared in the base(Base) and the rest of the bits are set.
#         In the value(FixedVal) the values for the Read only bits are given and the rest of the bits are cleared.

###
# **Description**: Takes input a string representing the ISA supported by the implementation. All extension names
# (other than Zext) should be mentioned in upper-case. Z extensions should begin with abitmaskn upper-case
# 'Z' followed by lower-case extension name (without Camel casing)
#
# **Examples**: 
#
# .. code-block:: none
#
#   ISA: RV32IMA 
#   ISA: RV64IMAFDCZifencei
#
# **Dependencies**: 
#   - Certain extensions are only valid in certain user-spec version. For, eg. Zifencei is available only in user-spec 2.3 and above.
ISA: 
    type: string
    regex: '^RV(32|64|128)([ACDEFGIJLMNPQSTUVX]|Zifencei|Zicsr|Ztso|Zam)*'
    required: True
    check_with: capture_isa_specifics

### 
# **Description**: Version number of User/Non-priveleged ISA specification
#
# **Examples**:
#
# .. code-block:: none
#
#   User_Spec_Version: 2.1
#   User_Spec_Version: 2.3
#
# **Dependencies**:
#   - None 
User_Spec_Version:
    type: float
    min: 2.2 
    default: 2.2
    required: True

### 
# **Description**: Version number of Priveleged ISA specification
#
# **Examples**:
#
# .. code-block:: none
#
#   Privilege_Spec_Version: 1.10
#   Privilege_Spec_Version: 1.11
#
# **Dependencies**:
#   - None 
Privilege_Spec_Version:
    type: float
    min: 1.10
    default: 1.10
    required: True

### 
# **Description**: Describes the fields of the *misa* CSR. A user needs to provide the following
# fields:
#   - implemented: A boolean value indicating if the *misa* has been implemented or not.
#   - MXL: needs to be described as *distinct-warl-func* provinding a list of legal values in int
#       - distinct:
#           - values: a list of legal values that the MXL field can take.
#           - mode : a string describing one of the *distinct-update-warl-func*.
#           - readonly: a boolean stating that the field is read only.
#   - Extensions: is described as a *bitmask-warl-func* indicating the valid extensions.
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
# **Examples**:
#
# .. code-block:: none
#
#     misa:
#       - implemented: True
#       - MXL:
#           - distinct:
#               - values : [1, 2]
#               - mode  : 'UnChd'
#       - Extensions:
#           - bitmask:
#               - base:   0x12D
#               - value:  0x000
# **Dependencies**: 
#   - The maximum value specified in MXL should not be greater than the XLEn/32 specified in the ISA
#   field
#   - All extensions defined in the ISA field, cannot be inferred as read-only-0 values. 
#   - All extensions not defined in the ISA field should be inferred as read-only-0 values.
#
misa:
    type: dict
    schema: 
        implemented:
            type: boolean
            default: False
        MXL:
            type: dict
            schema:
                distinct:
                    type: dict
                    schema:
                        values:
                            type: list
                            allowed: [1, 2, 3]
                            default: []
                            check_with: len_check
                        mode:
                            type: string
                            allowed: ["UnChgd","NextUp","NextDown","NearUp","NearDown","Largest","Smallest"]
                            default: "UnChgd"
                        readonly:
                            type: boolean
                            default: False 
            allowed: [distinct]
        Extensions:
            type: dict
            schema:
                bitmask:
                    type: dict
                    schema:
                        base:
                            type: integer
                            min: 0x00
                            max: 0x3FFFFFF
                            default: 0x00
                        value:
                            type: integer
                            min: 0x00
                            max: 0x3FFFFFF
                            default: 0x100
                    check_with: ext_check
                readonly:
                    type: boolean
                    # default_setter: <lambda doc:extreaddefset(doc)>
                    readonly: True
    default:
        implemented: False
### 
# **Description**: Stores the VendorId.
#       - implemented: A boolean field indicating that the register has been implemented.
#       - value: A hexa-decimal value equal to the VendorId
#       - readonly: A boolean field indicating whether the register is read only.( This register is read
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
#
# .. code-block:: none
#
#   mvendorid:
#       - implemented: True
#       - value: 0x458
#
# **Dependencies**: 
#       - None
mvendorid:
    type: dict
    schema: 
        implemented: 
            type: boolean
            default: False
        value:
            type: integer
            default: 0
            check_with: max_length
        readonly:
            type: boolean
            default: True
            readonly: True
### 
# **Description**: Stores the ArchitectureId.
#       - implemented: A boolean field indicating that the register has been implemented.
#       - value: A hexa-decimal value equal to the ArchitectureId
#       - readonly: A boolean field indicating whether the register is read only.( This register is read
#                   only always as mandated by the specifications.)
# 
# **Examples**:
#
# .. code-block:: none
#
#   marchid:
#       - implemented: True
#       - value: 0x458
#
# **Dependencies**: 
#       - None
marchid:
    type: dict
    schema: 
        implemented: 
            type: boolean
            default: False
        value:
            type: integer
            default: 0x00
            check_with: max_length
        readonly:
            type: boolean
            default: True
            readonly: True
    default:
        implemented: False
        value: 0x00

#       - readonly: A boolean field indicating whether the register is read only.( This register is read
### 
# **Description**: Stores the ImplementationId.
#       - implemented: A boolean field indicating that the register has been implemented.
#       - value: A hexa-decimal value equal to the ImplementationId
#                   only always as mandated by the specifications.)
# 
# **Examples**:
#
# .. code-block:: none
#   mimpid:
#       - implemented: True
#       - value: 0x458
# **Dependencies**: 
#       - None
mimpid:
    type: dict
    schema: 
        implemented: 
            type: boolean
            default: False
        value:
            type: integer
            default: 0x00
            check_with: max_length
        readonly:
            type: boolean
            default: True
            readonly: True
    default:
        implemented: False
        value: 0x00

### 
# **Description**: Specifies the Hart Ids in multi-core systems.
#       - implemented: A boolean field indicating that the register has been implemented.
#       - value: a list of integer values equal to the Hart Ids.
#       - readonly: A boolean field indicating whether the register is read only.( This register is read
#                   only always as mandated by the specifications.)
# 
# **Examples**:
#
# .. code-block:: none
#   mhartid:
#       - implemented: True
#       - value: [0,125,458]
# **Dependencies**: 
#       - Atleast one id must be equal to zero.
#       - No value must exceed the maximum value supported by the architecture.
mhartids:
    type: dict
    schema: 
        implemented: 
            type: boolean
            default: False
        value:
            type: list
            default: [0]
            check_with: hart_check
        readonly:
            type: boolean
            default: True
            readonly: True
    default:
        implemented: False
        value: [0]

### 
# **Description**: Specifies the fields of the *mstatus* register.
#       - XS:
#           - hardwired: A string field specifying whether the field is hardwired to 0 and if not it is indicated by 'No'.
#       - FS: needs to be described as *distinct-warl-func* provinding a list of legal values in int
#           - distinct:
#               - values: A list of legal values that the FS field can take.
#               - mode : A string describing one of the *distinct-update-warl-func*.
#       - MPP: needs to be described as *distinct-warl-func* provinding a list of legal values in int
#           - distinct:
#               - values: A list of legal values that the MPP field can take.
#               - mode : A string describing one of the *distinct-update-warl-func*.
#       - SXL: This field doesnt exist in systems where XLEN = 32
#           - hardwired: A string field specifying whether it is hardwired and if yes to what field(like MXL).
#           - values: A list of legal values which SXL can take when not hardwired.
#           - readonly: A boolean field stating whether the field is read only.
#       - UXL: This field doesnt exist in systems where XLEN = 32
#           - hardwired: A string field specifying whether the bits are hardwired and if yes to what field(like MXL).
#           - values: A list of legal values which UXL can take when not hardwired.
#           - readonly: A boolean field stating whether the field is read only.
#       - SD: 
#           - hardwired: A string field specifying whether the bits are hardwired and if yes to what value(usually 0).
# 
# **Examples**:
#
# .. code-block:: none
#   mstatus:
#       - SD:
#           - hardwired: '0'
#       - XS:
#           - hardwired: 'No'
#       - FS:
#           - distinct:
#               - values: [0,1,2,3]
#               - mode: "UnChgd"
#       - MPP:
#           -  distinct:
#               - values: [0,3]
#               - mode: "UnChgd"
#       - SXL:
#           - hardwired: "MXL"
#           - readonly: True
#       - UXL:
#           - values: [1,2]
#           - readonly: False
# **Dependencies**: 
#       - No value in MPP must be unsupported(1 cannot be present without the 'S' extension and '0' 
#         without the 'U' extension)
#       - No value in SXL or UXL must exceed XLEN/32.
mstatus:
    type: dict
    schema:
        XS:
            type: dict
            schema:
                readonly:
                    type: boolean
                    readonly: True
                    default: True
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
        FS:
            type: dict
            schema:
                distinct:
                    type: dict
                    schema:
                        values:
                            type: list
                            allowed: [0,1,2,3]
                        mode:
                            type: string
                            allowed: ["UnChgd","NextUp","NextDown","NearUp","NearDown","Largest","Smallest"]
                            default: "UnChgd"
        MPP:
            type: dict
            schema:
                distinct:
                    type: dict
                    schema:
                        values:
                            type: list
                            allowed: [0, 1, 3]
                            check_with: mpp_check
                        mode:
                            type: string
                            allowed: ["UnChgd","NextUp","NextDown","NearUp","NearDown","Largest","Smallest"]
                            default: "UnChgd"
                readonly:
                    type: boolean
                    default: False
                    readonly: True
        SXL:
            type: dict
            schema:
                hardwired:
                    type: list
                    allowed: ['No', 'MXL']
                    default: ['No']
                values:
                    type: list
                    allowed: [1, 2, 3]
                    default: [1]
                    check_with: len_check
                implemented:
                    type: boolean
                    readonly: True
                    # default_setter: lamda doc: sset()
                readonly:
                    type: boolean
                    default: False
            default:
                hardwired: ['No']
        UXL:
            type: dict
            schema:
                hardwired:
                    type: list
                    allowed: ['No', 'MXL', 'SXL']
                    default: ['No']
                values:
                    type: list
                    allowed: [1, 2, 3]
                    check_with: len_check
                implemented:
                    type: boolean
                    readonly: True
                    # default_setter: lamda doc: uset()
                readonly:
                    type: boolean
                    default: False
            default:
                hardwired: ['No']
        SD:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: True
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
        TSR:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        TW:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        TVM:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        MXR:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        SUM:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        SPP:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        MPRV:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        MPIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
            default:
                readonly: False
                hardwired: "No"
        SPIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        UPIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        MIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
            default:
                readonly: False
        SIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"
            readonly: True
        UIE:
            type: dict
            schema:
                readonly:
                    type: boolean
                    default: False
                hardwired:
                    type: string
                    allowed: ['No','0']
                    default: "No"

### 
# **Description**: Specifies the fields of the *mtvec* register.
#       - BASE: needs to be described as *distinct-warl-func* provinding a list of legal values in int or as a 
#               *range-warl-func* providing two integers specifying the range of legal values.
#           - range:
#               - base: An integer indicating the lowest legal value.
#               - bound: An integer indicating the highest legal value.
#               - mode: A string describing one of the *range-update-warl-func"
#           - distinct:
#               - values: A list of legal values that the BASE field can take.
#               - mode : A string describing one of the *distinct-update-warl-func*.
#               - readonly: A boolean value specifying whether the BASE field is read only.
#       - MODE: needs to be described as *distinct-warl-func* providing a list of legal values in int
#           - distinct:
#               - values: A list of legal values that the BASE field can take.
#               - mode : A string describing one of the *distinct-update-warl-func*.
#               - readonly: A boolean value specifying whether the BASE field is read only.
# 
# **Examples**:
#
# .. code-block:: none
#   mtvec:
#       - BASE:
#           - distinct:
#               - values: [1000]
#               - mode: 'UnChgd'
#               - readonly: True
#       - MODE:
#           -  distinct:
#               - values: [0,1]
#               - mode: "UnChgd"
# **Dependencies**: 
#       - The maximum in the list of values specified for MODE cannot exceed 1.
#       - No value in the list of legal values(in case of distinct func) or the base and bound(in case of range func)
#         can exceed 2^(XLEN-1)-4 and the base must be lower than bound.
mtvec:
    type: dict
    schema:
        BASE:
            type: dict
            schema:
                range:
                    type: dict
                    excludes: ['distinct']
                    schema: 
                        base:
                            type: integer
                        bound:
                            type: integer
                        mode:
                            type: string
                            allowed: ['Saturate','UnChgd','Addr']
                            default: 'UnChgd'
                    check_with: mtveccheck
                distinct:
                    type: dict
                    excludes: ['range']
                    schema:
                        values:
                            type: list
                            check_with: mtvecdist
                        mode:
                            type: string
                            allowed: ["UnChgd","NextUp","NextDown","NearUp","NearDown","Largest","Smallest"]
                            default: "UnChgd"
                        readonly:
                            type: boolean
                            default: False
        MODE:
            type: dict
            schema:
                distinct:
                    type: dict
                    schema:
                        values:
                            type: list
                            allowed: [0,1]
                        mode:
                            type: string
                            allowed: ["UnChgd","NextUp","NextDown","NearUp","NearDown","Largest","Smallest"]
                            default: "UnChgd"
                        readonly:
                            type: boolean
                            default: False
    default:
        BASE:
            range:
                base: 0x00
                bound: 0xFFFFFFFC
        MODE:
            distinct:
                values: [0]

### 
# **Description**: needs to be described as *bitmask-warl-func* indicating delegatable interrupts
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
# 
# **Examples**:
#
# .. code-block:: none
#   mideleg:
#       - bitmask:
#           - base: 0xFFFFFFFF
#           - value: 0x00
# **Dependencies**: 
#       - No bit can be hardwired to 1 i.e the any bit which is 0 in the base cannot be 1 in the value.
#       - The base and value cannot exceed the maximum value supported by the ISA.
mideleg:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    check_with: max_length
                value:
                    type: integer
                    default: 0x000
                    check_with: max_length
        implemented:
            type: boolean
            readonly: True    
    check_with: hardwirecheck
    default:
        bitmask:
            base: 0xFFFFFFFF
            value: 0x00
### 
# **Description**: needs to be described as *bitmask-warl-func* indicating delegatable exceptions
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
# 
# **Examples**:
#
# .. code-block:: none
#   medeleg:
#       - bitmask:
#           - base: 0xFFFFF7FF
#           - value: 0x00
# **Dependencies**: 
#       - No bit can be hardwired to 1 i.e the any bit which is 0 in the base cannot be 1 in the value.
#       - The base and value cannot exceed the maximum value supported by the ISA.
#       - The 11th bit needs to be hardwired to 0 ie. 0 in position 11 in both base and value.
medeleg:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    check_with: max_length
                value:
                    type: integer
                    default: 0x000
                    check_with: max_length
        implemented:
            type: boolean 
            readonly: True  
    check_with: medelegcheck
    default:
        bitmask:
            base: 0xFFFFF7FF
            value: 0x00                    

### 
# **Description**: needs to be described as *bitmask-warl-func* indicating pending interrupts.
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
# **Examples**:
#
# .. code-block:: none
#   mip:
#       - bitmask:
#           - base: 0xFFFFFFFF
#           - value: 0x00
# **Dependencies**: 
#       - No bit can be hardwired to 1 i.e the any bit which is 0 in the base cannot be 1 in the value.
#       - The base and value cannot exceed the maximum value supported by the ISA.
mip:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0xFFFFFFFF
                    check_with: max_length
                value:
                    type: integer
                    default: 0x000
                    check_with: max_length
        implemented:
            type: boolean
            default: True
            readonly: True
    check_with: hardwirecheck
    default:
        bitmask:
            base: 0xFFFFFFFF

### 
# **Description**: needs to be described as *bitmask-warl-func* indicating allowed interrupts.
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
# **Examples**:
#
# .. code-block:: none
#   mie:
#       - bitmask:
#           - base: 0xFFFFFFFF
#           - value: 0x00
# **Dependencies**: 
#       - No bit can be hardwired to 1 i.e the any bit which is 0 in the base cannot be 1 in the value.
#       - The base and value cannot exceed the maximum value supported by the ISA.
mie:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0xFFFFFFFF
                    check_with: max_length
                value:
                    type: integer
                    default: 0x000
                    check_with: max_length
        implemented:
            type: boolean
            default: True
            readonly: True
    check_with: hardwirecheck
    default:
        bitmask:
            base: 0xFFFFFFFF

mscratch:
    type: dict
    schema:
        implemented:
            type: boolean
        readonly:
            type: boolean
    default:
        implemented: True
        readonly: False
    readonly: True

mcause:
    type: dict
    schema:
        implemented:
            type: boolean
        readonly:
            type: boolean
    default:
        implemented: True
        readonly: False
    readonly: True

### 
# **Description**: needs to be described as *bitmask-warl-func* or a *range-warl-func* indicating the range of 
#                  legal values allowed
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
#       - range:
#           - base: An integer indicating the lowest legal value.
#           - bound: An integer indicating the highest legal value.
#           - mode: A string describing one of the *range-update-warl-func"
# **Examples**:
#
# .. code-block:: none
#   mepc:
#       - range:
#           - bound: 0xFFFFFFFF
#           - base: 0x00
# **Dependencies**: 
#       - The base and value cannot exceed the maximum value supported by the ISA (in case of *bitmask-warl-func*).
#       - The base and bound cannot exceed the maximum value supported by the ISA (in case of *range-warl-func*) 
#         and the base should be lower than the bound.
mepc:
    type: dict
    schema:
        bitmask:
            type: dict
            excludes: ['range']
            schema:
                base:
                    type: integer
                    default: 0x00
                    check_with: max_length
                value:
                    type: integer
                    default: 0x000
                    check_with: max_length
        range:
            type: dict
            excludes: ['bitmask']
            schema:
                base:
                    type: integer
                bound:
                    type: integer
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
            check_with: rangecheck
    default:
        range:
            base: 0x00
            bound: 0xFFFFFFFF
            mode: "UnChgd"


### 
# **Description**: needs to be described as *bitmask-warl-func* indicating supported counters.
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
#       - readonly: a boolean value indicating whether the register is read only.
#       - hardwired: a string indicating whether the register is hardwired to 0 or not.
# **Examples**:
#
# .. code-block:: none
#   mcountinhibit:
#       - bitmask:
#           - base: 0xFFFFFFFF
#           - value: 0x00
# **Dependencies**: 
#       - The base and value cannot exceed the maximum value supported by the ISA.
mcountinhibit:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

### 
# **Description**: needs to be described as *bitmask-warl-func* indicating supported counters.
#       - bitmask:
#           - base  : a hexa-decimal value providing the *base* field of the *bitmask-warl-func*.
#           - value : a hexa-decimal value providing the *value* field of the *bitmask-warl-func*.
#       - readonly: a boolean value indicating whether the register is read only.
#       - hardwired: a string indicating whether the register is hardwired to 0 or not.
# **Examples**:
#
# .. code-block:: none
#   mcountinhibit:
#       - bitmask:
#           - base: 0xFFFFFFFF
#           - value: 0x00
# **Dependencies**: 
#       - The base and value cannot exceed the maximum value supported by the ISA.
mcounteren:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mcycle:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

minstret:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter3:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent3:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter4:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent4:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter5:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent5:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter6:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent6:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter7:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent7:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter8:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent8:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter9:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent9:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter10:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent10:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter11:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent11:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter12:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent12:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter13:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent13:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter14:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent14:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter15:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent15:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter16:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent16:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter17:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent17:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter18:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent18:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter19:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent19:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent20:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter20:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent21:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter21:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent22:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter22:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent23:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter23:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent24:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter24:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent25:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter25:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent26:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter26:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent27:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter27:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent28:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter28:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent29:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter29:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent30:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter30:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mphmevent31:
    type: dict
    schema:
        bitmask:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                value:
                    type: integer
                    default: 0x00
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'

mhpmcounter31:
    type: dict
    schema:
        range:
            type: dict
            schema:
                base:
                    type: integer
                    default: 0x00
                    readonly: True
                bound:
                    type: integer
                    default: 0xFFFFFFFFFFFFFFFF
                    readonly: True
                mode:
                    type: string
                    allowed: ['Saturate','UnChgd','Addr']
                    default: 'UnChgd'
                    readonly: True
        readonly:
            type: boolean
            default: False
        hardwired:
            type: string
            allowed: ['No','0']
            default: 'No'
        implemented:
            type: boolean
            default: True
            readonly: True
    default:
        readonly: True
        hardwired: '0'



# # Platform environment
# # Name of the Target
# USER_TARGET:
#     type: string
#     required: True
# # Directory containing the platform specific headers
# USER_ENV_DIR:
#     type: string
#     required: True
# # Linker script to be used during compilation of test
# USER_LINKER:
#     type: string
#     required: True
# # User defined ABI to be used during compilation
# USER_ABI:
#     type: string
#     required: True
# USER_EXECUTABLE:
#     type: string
#     required: True

# # Execution Enviornment
# RISCV-PREFIX:
#     type: string
#     default: riscv64-unknown-elf-
#     required: True
# USER_SIGN:
#     type: string
#     required: True
# USER_POST_SIM:
#     type: string
#     default: ''
#     required: False
